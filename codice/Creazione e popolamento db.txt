CREATE TABLE Studenti(
    Matricola INT AUTO_INCREMENT,
    Nome VARCHAR(30),
    Cognome VARCHAR(50),
    
    CONSTRAINT PK_Studenti PRIMARY KEY(Matricola)
);
INSERT INTO 'studenti' ('Matricola', 'Nome', 'Cognome') VALUES ('1', 'Aldo', 'Aldi'), ('2', 'Inès', 'De Lacroix'), ('3', 'Niky', 'Ponty'), ('4', 'Frank', 'Pelly'), ('5', 'Sonia', 'Sincoria');


CREATE TABLE Corsi(
    CodiceCorso INT AUTO_INCREMENT,
    Nome VARCHAR(50) NOT NULL,
    CFU TINYINT,
    
    CONSTRAINT PK_Corsi PRIMARY KEY(CodiceCorso)
);
INSERT INTO 'corsi' ('CodiceCorso', 'Nome', 'CFU') VALUES ('1', 'Architettura dei Calcolatori', '12'), ('2', 'Programmazione III', '6'), ('3', 'Reti di Calcolatori', '9'), ('4', 'Tecnologie Web', '6'), ('5', 'Algoritmi e Strutture Dati', '12');

CREATE TABLE Esami(
    CodiceEsame INT AUTO_INCREMENT,
    CodiceCorso INT NOT NULL,
    Tipo CHAR(5) NOT NULL CHECK (Tipo IN ("Esame","Prova")),
    Modalita varchar(7) NOT NULL CHECK (Modalita IN ("Orale","Scritto")),
    Descrizione varchar(500),
    
    CONSTRAINT PK_Esami PRIMARY KEY(CodiceEsame),
    CONSTRAINT FK_Esami_Corsi FOREIGN KEY(CodiceCorso) REFERENCES Corsi(CodiceCorso)
);
INSERT INTO 'esami' ('CodiceEsame', 'CodiceCorso', 'Tipo', 'Modalita', 'Descrizione') VALUES ('1', '1', 'Esame', 'Orale', NULL),('2', '2', 'Esame', 'Orale', 'L\'esame orale è composto da due parti:\r\n-Discussione del progetto\r\n-Prova orale sugli argomenti del corso'), ('3', '3', 'Esame', 'Orale', 'L\'esame orale è composto da due parti:\r\n-Discussione del progetto\r\n-Prova orale sugli argomenti del corso'),('4', '5', 'Prova', 'Scritto', 'Prova scritta'), ('5', '5', 'Prova', 'Scritto', 'Prova pratica C++'),('6', '5', 'Esame', 'Orale', NULL), ('7', '1', 'Esame', 'Scritto', 'Per accedere alla prova orale bisogna superare la prova scritta'),('8', '4', 'Esame', 'Orale', NULL);

CREATE TABLE Appelli(
    CodiceAppello INT AUTO_INCREMENT,
    CodiceEsame INT NOT NULL,
    Data DATETIME NOT NULL,
    
    CONSTRAINT PK_Appelli PRIMARY KEY(CodiceAppello),
    CONSTRAINT FK_Appelli_Esami FOREIGN KEY(CodiceEsame) REFERENCES Esami(CodiceEsame)
);
INSERT INTO 'appelli' ('CodiceAppello', 'CodiceEsame', 'Data') VALUES ('1', '1', '2024-01-15 10:00:00'), ('2', '7', '2024-01-11 09:30:00'), ('3', '7', '2024-01-30 09:30:00'), ('4', '1', '2024-02-05 10:00:00'), ('5', '4', '2024-01-10 14:00:00'), ('6', '5', '2024-01-17 14:30:00'), ('7', '6', '2024-01-25 09:30:00'), ('8', '2', '2024-01-22 09:00:00'), ('9', '2', '2024-02-19 09:00:00'), ('10', '3', '2024-01-25 10:00:00'), ('11', '3', '2024-02-15 10:00:00'),('12', '8', '2024-01-08 10:00:00');

CREATE TABLE Prenotazioni(
    CodiceAppello INT NOT NULL,
    Studente INT NOT NULL,
    NumeroProgressivo SMALLINT,
    
    CONSTRAINT PK_Prenotazioni PRIMARY KEY(CodiceAppello,Studente),
    CONSTRAINT FK_Prenotazioni_Appelli FOREIGN KEY(CodiceAppello) REFERENCES Appelli(CodiceAppello),
    CONSTRAINT FK_Prenotazioni_Studenti FOREIGN KEY(Studente) REFERENCES Studenti(Matricola)
);
INSERT INTO prenotazioni (CodiceAppello, Studente, NumeroProgressivo) VALUES ('1', '1', '1'), ('1', '2', '2'), ('3', '5', '1'), ('4', '5', '1'), ('9', '3', '1'), ( '9', '4', '2'), ( '10', '4', '1'), ('10', '3', '2'), ('10', '2', '3'), ('10', '5', '4'), ('8', '1', '1'), ('11', '1', '1'), ('5', '3', '1'), ('6', '3', '1'), ('7', '3', '1'), ('5', '2', '2'), ('6', '2', '2'), ('7', '2', '2'), ('7', '1', '3');



/*QUERY UTILI:
-Nomi dei corsi relativi agli appelli registrati e le relative date*/
SELECT CodiceAppello AS Appello, Esami.CodiceEsame AS C_Esame, Nome AS Nome_Esame, appelli.Data AS Data
FROM Appelli JOIN Esami ON appelli.CodiceEsame=esami.CodiceEsame JOIN Corsi ON esami.CodiceCorso=corsi.CodiceCorso
ORDER BY Appello;

/*-Il numero di prenotati per ogni appello*/
SELECT CodiceAppello,COUNT(*) AS Numero_iscritti FROM prenotazioni
GROUP BY CodiceAppello;


